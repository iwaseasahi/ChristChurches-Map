version: 2.1

ruby_image: &ruby_image
  circleci/ruby:2.5.5-node-browsers-legacy

executors:
  default_executor:
    docker:
      - image: *ruby_image
        environment:
          BUNDLE_JOBS: 4
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test
          TZ: /usr/share/zoneinfo/Asia/Tokyo
          DB_HOST: 127.0.0.1
          DATABASE_USERNAME: root
          DATABASE_PASSWORD: ''
          DATABASE_SOCKET: '/var/run/mysqld/mysqld.sock'
          AWS_ACCESS_KEY_ID: 'test'
          AWS_SECRET_ACCESS_KEY: 'test'
          SECRETS_PRODUCTION: 'test'
          REDIS: 'redis:://localhost:0000'
      - image: circleci/mysql:5.6.44
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_DATABASE: christchurches_map_aws_local
          TZ: /usr/share/zoneinfo/Asia/Tokyo
    working_directory: ~/christchurches-map

jobs:
  build:
    executor: default_executor
    steps:
      - checkout
      - run: bundle -v
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
      - restore_cache:
          keys:
            - rails-christchurches-map-bundle-v2-{{ checksum "Gemfile.lock" }}
            - rails-christchurches-map-bundle-v2-
      - run: bundle check || bundle install --clean
      - save_cache:
          key: rails-christchurches-map-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run:
          name: Database setup
          command: bundle exec rake db:create db:migrate
  test:
    executor: default_executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - rails-christchurches-map-bundle-v2-{{ checksum "Gemfile.lock" }}
            - rails-christchurches-map-bundle-v2-
      - run: bundle
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run:
          name: Database setup
          command: bundle exec rake db:create db:migrate
      - run:
          name: Run rspec in parallel
          command: |
            COVERAGE=true bundle exec rspec --profile 10 \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      - store_test_results:
          path: test_results
      - store_artifacts:
          path: coverage
      - run:
          name: Send coverage to pull request
          command: |
            if [ "${CIRCLE_BRANCH}" != "master" ]; then
              ./bin/send_coverage
            fi
  deploy:
    docker:
      - image: *ruby_image
        environment:
          CHRIST_CHURCHES_MAP_SSH_KEY: ~/.ssh/id_rsa_14a4f551a470797b5b63d0d7e924e2d7
    working_directory: ~/christchurches-map
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "14:a4:f5:51:a4:70:79:7b:5b:63:d0:d7:e9:24:e2:d7"
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      - run:
          name: Deploy to AWS if tests pass and branch is Master
          command: bundle exec cap production deploy
workflows:
  version: 2
  commit:
    jobs:
      - build
      - test:
          requires:
            - build
          filters:
            branches:
              ignore:
                - master
  build-deploy:
    jobs:
      - build
      - deploy
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
